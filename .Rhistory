```{r child = "chapter1.Rmd"}
list.files()
7/93
20/7
25/90
0.07/0.25
0.3/9
0.25/0.07
0.33/0.77
0.33/0.67
0.10/0.90
setwd("~/GitHub/IODS-project")
#read din data
data <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header=T, sep="\t")
#check dimensions of data
dim(data)
#183
?dim()
#data has 183 rows and 60 columns
str(data)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#Create an analysis dataset with the variables gender, age, attitude, deep, stra, surf and points.
library(dplyr)
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(data, one_of(deep_questions))
data$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(data, one_of(surface_questions))
data$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(data, one_of(strategic_questions))
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(data, one_of(strategic_questions))
data$stra <- rowMeans(strategic_columns)
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2018 <- select(data, one_of(keep_columns))
# choose a handful of columns to keep
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2018 <- select(data, one_of(keep_columns))
# see the stucture of the new dataset
str(learning2018)
#scale attitude variable
data$attitude <- data$Attitude / 10
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2018 <- select(data, one_of(keep_columns))
# see the stucture of the new dataset
str(learning2018)
# print out the column names of the data
colnames(learning2018)
# change the name of the second column
colnames(learning2018)[2] <- "age"
# change the name of "Points" to "points"
colnames(learning2018)[7] <- "points"
# print out the new column names of the data
colnames(learning2018)
# select rows where points is greater than zero
learning2018t <- filter(learning2018, points > 0)
# select rows where points is greater than zero
learning2018 <- filter(learning2018, points > 0)
#check dimensions
dim(learning2018)
head(learning2018)
write.table(learning2018, "learning2018.txt", sep="\t", quote=F, row.names = F)
write.table(learning2018, "~GitHub/IODS-project/data/learning2018.txt", sep="\t", quote=F, row.names = F)
setwd("~/GitHub/IODS-project")
write.table(learning2018, "~/GitHub/IODS-project/data/learning2018.txt", sep="\t", quote=F, row.names = F)
learning2018 <- read.table("~/GitHub/IODS-project/data/learning2018.txt", header=T, sep="\t")
dim(learning2018)
str(learning2018)
head(learning2018)
students2014 <- read.table("~/GitHub/IODS-project/data/learning2018.txt", header=T, sep="\t")
dim(students2014)
str(studnets2014)
str(students2014)
# Access the gglot2 library
library(ggplot2)
# initialize plot with data and aesthetic mapping
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col=gender))
# Access the gglot2 library
library(ggplot2)
# initialize plot with data and aesthetic mapping
p1 <- ggplot(students2014, aes(x = attitude, y = points, col=gender))
# define the visualization type (points)
p2 <- p1 + geom_point()
# draw the plot
p2
# add a regression line
p3 <- p2 + geom_smooth(method = "lm")
# add a main title and draw the plot
p4 <- ggtitle("Student's attitude versus exam points")
p4
p4
ggplot(students2014, aes(x = attitude, y = points, col=gender)
)
attach(students2014)
# initialize plot with data and aesthetic mapping
p1 <- ggplot(students2014, aes(x = attitude, y = points, col=gender))
# define the visualization type (points)
p2 <- p1 + geom_point()
# draw the plot
p2
# add a regression line
p3 <- p2 + geom_smooth(method = "lm")
# add a main title and draw the plot
p4 <- ggtitle("Student's attitude versus exam points")
p4
head(studnets2014)
head(students2014)
# define the visualization type (points)
p2 <- p1 + geom_point()
# draw the plot
p2
# add a regression line
p3 <- p2 + geom_smooth(method = "lm")
p3
# add a main title and draw the plot
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(studnets2014[-1])
students2014 <- read.table("~/GitHub/IODS-project/data/learning2018.txt", header=T, sep="\t")
dim(students2014)
str(students2014)
pairs(students2014[-1])
# access the GGally and ggplot2 libraries
install.packages("GGally")
# access the GGally and ggplot2 libraries
library(GGally)
library(ggplot2)
p <- ggpairs(students2014, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(students2014[-1], col(students2014$gender))
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(students2014[-1], col(gender))
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(students2014[-1], col=students2014$gender)
p <- ggpairs(students2014, mapping = aes(col=gender), lower = list(combo = wrap("facethist", bins = 20)))
p
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(students2014[-1], col=students2014$gender)
# access the GGally and ggplot2 libraries
library(GGally)
library(ggplot2)
p <- ggpairs(students2014, mapping = aes(col=gender, aes=0.3), lower = list(combo = wrap("facethist", bins = 20)))
kable(summary(students2014))
kable(summary(students2014))
kable(summary(students2014))
library("knitr", lib.loc="~/R/win-library/3.5")
kable(summary(students2014))
```{r message=FALSE}
p1 <- ggplot(students2014, aes(x = attitude, y = points, col=gender))
# define the visualization type (points)
p2 <- p1 + geom_point()
# add a regression line
p3 <- p2 + geom_smooth(method = "lm")
# add a main title and draw the plot
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
pairs(students2014[-1], col=students2014$gender)
p_final <- p+ ggtitle("Figure 1. Scatter plot, density plot and the correlation coefficient,\n between each pair of variables, colored by gender")
p_final
#draw a graphical summary using ggpairs()
p <- ggpairs(students2014, mapping = aes(col=students2014$gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p_final <- p+ ggtitle("Figure 1. Scatter plot, density plot and the correlation coefficient,\nbetween each pair of variables, colored by gender")
p_final
p
p_final + theme_bw(base_size = 8)
p_final + theme_minimal(base_size = 8)
p_1 <- ggplot(students2014, aes(x = deep, y = surf, col=gender))
# define the visualization type (points), and regression line
p_2 <- p_1 + geom_point() + geom_smooth(method = "lm")
# add a main title and draw the plot
p_3 <- p_2 + ggtitle("Figure 2. Student's deep versus surface learning approach")
p_3
my_model <- lm(points ~ surf+deep+stra, data = students2014)
summary(my_model)
my_model <- lm(points ~ attitude+age+gender, data = students2014)
summary(my_model)
my_model <- lm(points ~ attitude, data = students2014)
summary(my_model)
str(my_model1)
str(my_model)
plot(my_model, which=c(1,2,5))
par(mfrow = c(2,2))
plot(my_model, which=c(1,2,5))
